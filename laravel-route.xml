<snippets license="GPL v2" filetypes="PHP/PHP;PHP (HTML);JavaScript/PHP;CSS/PHP" authors="github.com/Stolz" name="Laravel Route" namespace="">
 <script></script>
 <item>
  <match>route-closure</match>
  <fillin>Route::${verb}('${url}', function() {
    return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-closure-name</match>
  <fillin>Route::${verb}('${url}', function() {
    return ${cursor};
})->name('${name}');</fillin>
 </item>
 <item>
  <match>route-closure-param</match>
  <fillin>Route::${verb}('${url}/{${param}}', function($${param}) {
    return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-closure-param-optional</match>
  <fillin>Route::${verb}('${url}/{${param}?}', function($${param} = null) {
    return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-closure-param-regex</match>
  <fillin>Route::${verb}('${url}/{${param}}', function($${param}) {
    return ${cursor};
})->where('${param}', '[A-Za-z]+');</fillin>
 </item>
 <item>
  <match>route-closure-params-regex</match>
  <fillin>Route::${verb}('${url}/{${integer}}/{${string}}', function($${integer}, $${string}) {
    return ${cursor};
})->where(['${integer}' => '[0-9]+', '${string}' => '[A-Za-z]+']);</fillin>
 </item>
 <item>
  <match>route-controller</match>
  <fillin>Route::${verb}('${url}', '${controller}Controller@${action}');</fillin>
 </item>
 <item>
  <match>route-controller-name</match>
  <fillin>Route::${verb}('${url}', '${controller}Controller@${action}')->name('${name}');</fillin>
 </item>
 <item>
  <match>route-controller-param</match>
  <fillin>Route::${verb}('${url}/{${param}}', '${controller}Controller@${action}');</fillin>
 </item>
 <item>
  <match>route-group</match>
  <fillin>Route::middleware(['first', 'second'])->domain('{${foo}}.myapp.com')->namespace('${foo}')->prefix('${foo}')->name('${foo}.')->group(function () {
    ${cursor}
});</fillin>
 </item>
 <item>
  <match>route-resource</match>
  <fillin>Route::resource('${url}', '${controller}Controller');</fillin>
 </item>
 <item>
  <match>route-resource-only</match>
  <fillin>Route::resource('${url}', '${controller}Controller')->only([${cursor}/*'index', 'create', 'store', 'show', 'edit', 'update', 'destroy' */]);
</fillin>
 </item>
 <item>
  <match>route-resource-except</match>
  <fillin>Route::resource('${url}', '${controller}Controller')->except([${cursor}/*'index', 'create', 'store', 'show', 'edit', 'update', 'destroy' */]);
</fillin>
 </item>
 <item>
  <match>route-closure-https-forced</match>
  <fillin>Route::${verb}('${url}', function() {
    return ${cursor};
})->attribute(0, 'https');</fillin>
 </item>
 <item>
  <match>route-bind-model</match>
  <fillin>Route::model('${param}', App\Models\SomeModel::class);</fillin>
 </item>
 <item>
  <match>route-current</match>
  <fillin>Route::currentRouteName();</fillin>
 </item>
 <item>
  <match>route-bind-model-custom</match>
  <fillin>Route::bind('${param}', function ($id) {
    return $modelRepository->findById($id) ?? abort(404, _("Model with id '$id' not found"));
});</fillin>
 </item>
 <item>
  <match>route-redirect</match>
  <fillin>Route::redirect('/from', '/to', 301);</fillin>
 </item>
 <item>
  <match>route-view</match>
  <fillin>Route::view('/url', 'view');</fillin>
 </item>
 <item>
  <match>route-view-param</match>
  <fillin>Route::view('/url', 'view', ['param' => 'Value']);</fillin>
 </item>
 <item>
  <match>route-resource-api</match>
  <fillin>Route::apiResource('${url}', '${controller}Controller');</fillin>
 </item>
 <item>
  <match>route-resource-api-except</match>
  <fillin>Route::apiResource('${url}', '${controller}Controller')->except([${cursor}/*'index', 'store', 'show', 'update', 'destroy' */]);
</fillin>
 </item>
 <item>
  <match>route-resource-api-only</match>
  <fillin>Route::apiResource('${url}', '${controller}Controller')->only([${cursor}/*'index', 'store', 'show', 'update', 'destroy' */]);</fillin>
 </item>
 <item>
  <match>route-resources</match>
  <fillin>Route::resources([
    'user' => 'UserController',
    'posts' => 'PostController'
]);</fillin>
 </item>
 <item>
  <match>route-resources-api</match>
  <fillin>Route::apiResources([
    'user' => 'UserController',
    'posts' => 'PostController'
]);</fillin>
 </item>
</snippets>
