<snippets filetypes="PHP/PHP;PHP (HTML);JavaScript/PHP;CSS/PHP" license="GPL v2" namespace="" authors="github.com/Stolz" name="Laravel Route">
 <script></script>
 <item>
  <match>route</match>
  <fillin>Route::${verb}('${url}', function() {
	return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-name</match>
  <fillin>Route::${verb}('${url}', ['as' => '${name}', function() {
	${cursor}
}]);
</fillin>
 </item>
 <item>
  <match>route-param</match>
  <fillin>Route::${verb}('${url}/{${param}}', function($${param}) {
	return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-param-optional</match>
  <fillin>Route::${verb}('${url}/{${param}?}', function($${param} = NULL) {
	return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-param-optional-with-fallback</match>
  <fillin>Route::${verb}('${url}/{${param}?}', function($${param} = ${value}) {
	return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-param-regex-integer</match>
  <fillin>Route::${verb}('${url}/{${number}}', function($${number}) {
	return ${cursor};
})->where('${number}', '[0-9]+');</fillin>
 </item>
 <item>
  <match>route-param-regex-string</match>
  <fillin>Route::${verb}('${url}/{${string}}', function($${string}) {
	return ${cursor};
})->where('${string}', '[A-Za-z]+');</fillin>
 </item>
 <item>
  <match>route-param-regex-integer-string</match>
  <fillin>Route::${verb}('${url}/{${integer}}/{${string}}', function($${integer}, $${string}) {
	return ${cursor};
})->where(['${integer}' => '[0-9]+', '${string}' => '[A-Za-z]+']);</fillin>
 </item>
 <item>
  <match>route-param-wildcard</match>
  <fillin>Route::${verb}('${url}/(:num)/(:any)/(:any?)', function($number, $any, $optional = NULL) {
	return ${cursor};
});</fillin>
 </item>
 <item>
  <match>route-controller</match>
  <fillin>Route::${verb}('${url}', '${controller}Controller@${action}');</fillin>
 </item>
 <item>
  <match>route-controller-name</match>
  <fillin>Route::${verb}('${url}', ['as' => '${name}', 'uses' => '${controller}Controller@${action}']);</fillin>
 </item>
 <item>
  <match>route-controller-array</match>
  <fillin>Route::${verb}('${url}', ['uses' => '${controller}Controller@${action}']);</fillin>
 </item>
 <item>
  <match>route-controller-param</match>
  <fillin>Route::${verb}('${url}/{${param}}', '${controller}Controller@${action}');</fillin>
 </item>
 <item>
  <match>route-controller-restful</match>
  <fillin>Route::controller('${url}', '${controller}Controller');</fillin>
 </item>
 <item>
  <match>route-middleware</match>
  <fillin>Route::${verb}('${url}', [
	'middleware' => '${name:parameter}',
	function() {
		return ${cursor};
	}
]);</fillin>
 </item>
 <item>
  <match>route-middleware-wildcard</match>
  <fillin>Route::when('${url}/*', '${middleware}');</fillin>
 </item>
 <item>
  <match>route-middleware-wildcard-restrict-method</match>
  <fillin>Route::when('${url}/*', '${middleware}', [${cursor}/* 'get', 'post', 'put', 'delete' */]);</fillin>
 </item>
 <item>
  <match>route-group</match>
  <fillin>Route::group(['middleware' => '${middleware}'], function() {
	${cursor}
});</fillin>
 </item>
 <item>
  <match>route-group-domain</match>
  <fillin>Route::group(['domain' => '{subdomain}.myapp.com'], function() {
	${cursor}
});</fillin>
 </item>
 <item>
  <match>route-group-prefix</match>
  <fillin>Route::group(['prefix' => '${prefix}'], function() {
	${cursor}
});</fillin>
 </item>
 <item>
  <match>route-resource</match>
  <fillin>Route::resource('${url}', '${controller}Controller');</fillin>
 </item>
 <item>
  <match>route-resource-only</match>
  <fillin>Route::resource('${url}', '${controller}Controller', ['only' => [${cursor}/*'index', 'create', 'store', 'show', 'edit', 'update', 'destroy' */]]);
</fillin>
 </item>
 <item>
  <match>route-resource-except</match>
  <fillin>Route::resource('${url}', '${controller}Controller', ['except' => [${cursor}/*'index', 'create', 'store', 'show', 'edit', 'update', 'destroy' */]);
</fillin>
 </item>
 <item>
  <match>route-https-forced</match>
  <fillin>Route::${verb}('${url}', ['https', function() {
	${cursor}
}]);</fillin>
 </item>
 <item>
  <match>route-bind-model</match>
  <fillin>Route::model('${param}', '${model/./\u\0/}');
Route::get('url/{${param}}', function(${model} $${param})
{
	${cursor}
});</fillin>
 </item>
 <item>
  <match>route-current</match>
  <fillin>Route::currentRouteName();</fillin>
 </item>
 <item>
  <match>filter</match>
  <fillin>Route::filter('${name}', function()
{
	return ${cursor};
});</fillin>
 </item>
</snippets>
