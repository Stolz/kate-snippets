<snippets filetypes="PHP/PHP;PHP (HTML);JavaScript/PHP;CSS/PHP" namespace="" name="PHP Common" authors="github.com/Stolz" license="GPL v2">
 <script></script>
 <item>
  <match>class</match>
  <fillin>class ${name} {
    ${cursor}
}</fillin>
 </item>
 <item>
  <match>constructor</match>
  <fillin>/**
 * Class constructor
 *
 * @return void
 */
public function __construct()
{
    ${cursor}
}</fillin>
 </item>
 <item>
  <match>class+constructor</match>
  <fillin>class ${name} {

    /**
     * Class constructor
     *
     * @return void
     */
    public function __construct()
    {
        ${cursor}
    }
}</fillin>
 </item>
 <item>
  <match>function-doc</match>
  <fillin>/**
 * Function description
 *
 * @return TODO
 */
public function ${name}(): TODO
{
    return ${cursor};
}</fillin>
 </item>
 <item>
  <match>function-param</match>
  <fillin>/**
 * Function description
 *
 * @param  string
 * @param  int
 * @param  bool
 * @param  mixed
 * @return TODO
 */
public function ${name}($param): TODO
{
    return ${cursor};
}
</fillin>
 </item>
 <item>
  <match>closure</match>
  <fillin>function () {
    return ${cursor};
}</fillin>
 </item>
 <item>
  <match>function</match>
  <fillin>function ${name} (): TODO
{
    return ${cursor};
}</fillin>
 </item>
 <item>
  <match>self</match>
  <fillin>self::</fillin>
 </item>
 <item>
  <match>if</match>
  <fillin>if (${cursor}) {

}</fillin>
 </item>
 <item>
  <match>ifelse</match>
  <fillin>if (${cursor}}) {

} else {

}</fillin>
 </item>
 <item>
  <match>else</match>
  <fillin>else {
    ${cursor}
}</fillin>
 </item>
 <item>
  <match>elseif</match>
  <fillin>elseif (${cursor}) {

}</fillin>
 </item>
 <item>
  <match>foreach</match>
  <fillin>foreach ($array as $key => $value) {
    ${cursor}
}</fillin>
 </item>
 <item>
  <match>switch</match>
  <fillin>switch (${cursor}) {
    default:
    case 1:

        break;
}</fillin>
 </item>
 <item>
  <match>for</match>
  <fillin>for ($i = 1; $i &lt;= 10; $i++) {
    ${cursor}
}</fillin>
 </item>
 <item>
  <match>while</match>
  <fillin>while ($i &lt;= 10) {
    ${cursor}
}</fillin>
 </item>
 <item>
  <match>trycatch</match>
  <fillin>try {
    if (${cursor})
        throw new Exception('TODO');
} catch(Exception $exception) {
    echo $exception->getMessage();
}</fillin>
 </item>
 <item>
  <match>trycatchfinally</match>
  <fillin>try {
    if (${cursor})
        throw new Exception('TODO');
} catch(Exception $exception) {
    echo $exception->getMessage();
} finally {

}</fillin>
 </item>
 <item>
  <match>array</match>
  <fillin>[
    '${cursor}' => 1,
];</fillin>
 </item>
 <item>
  <match>throw</match>
  <fillin>throw new Exception('${cursor}');</fillin>
 </item>
 <item>
  <match>static</match>
  <fillin>static::</fillin>
 </item>
</snippets>
