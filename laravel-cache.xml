<snippets filetypes="PHP/PHP;PHP (HTML);JavaScript/PHP;CSS/PHP" license="LGPL v2+" namespace="" authors="github.com/Stolz" name="Laravel Cache">
 <script></script>
 <item>
  <match>cache-remember</match>
  <fillin>Cache::remember('key', $minutes, function() {
	return 'value';
})</fillin>
 </item>
 <item>
  <match>cache-remember-forever</match>
  <fillin>Cache::rememberForever('key', function() {
	return 'value';
})
</fillin>
 </item>
 <item>
  <match>cache-add</match>
  <fillin>Cache::put('key', 'value', $minutes);</fillin>
 </item>
 <item>
  <match>cache-add-carbon</match>
  <fillin>Cache::put('key', 'value', Carbon::now()->addMinutes(10))</fillin>
 </item>
 <item>
  <match>cache-add-if-doesnt-exist</match>
  <fillin>Cache::add('key', 'value', $minutes)</fillin>
 </item>
 <item>
  <match>cache-add-forever</match>
  <fillin>Cache::forever('key', 'value')</fillin>
 </item>
 <item>
  <match>cache-has</match>
  <fillin>Cache::has('key')</fillin>
 </item>
 <item>
  <match>cache-get</match>
  <fillin>Cache::get('key')</fillin>
 </item>
 <item>
  <match>cache-get-fallback</match>
  <fillin>Cache::get('key', $defaultIfNotFound)</fillin>
 </item>
 <item>
  <match>cache-get-fallback-closure</match>
  <fillin>Cache::get('key', function() {
	return 'default';
})</fillin>
 </item>
 <item>
  <match>cache-get-and-delete</match>
  <fillin>Cache::pull('key')</fillin>
 </item>
 <item>
  <match>cache-forget</match>
  <fillin>Cache::forget('key')</fillin>
 </item>
 <item>
  <match>cache-increment-one</match>
  <fillin>Cache::increment('key')</fillin>
 </item>
 <item>
  <match>cache-increment-amount</match>
  <fillin>Cache::increment('key', $amount)</fillin>
 </item>
 <item>
  <match>cache-decrement-one</match>
  <fillin>Cache::decrement('key')</fillin>
 </item>
 <item>
  <match>cache-decrement-amount</match>
  <fillin>Cache::decrement('key', $amount)</fillin>
 </item>
 <item>
  <match>cache-tag</match>
  <fillin>Cache::tags('tag1', 'tag')-></fillin>
 </item>
 <item>
  <match>cache-tag-array</match>
  <fillin>Cache::tags(['tag1', 'tag2'])-></fillin>
 </item>
 <item>
  <match>cache-tag-flush</match>
  <fillin>Cache::tags('tag1', 'tag2')->flush()</fillin>
 </item>
</snippets>
